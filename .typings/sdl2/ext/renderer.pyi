from sdl2 import SDL_Renderer, SDL_Surface
from sdl2.ext import Color, Window

class Texture:
    def __init__(self, renderer: Renderer, surface: SDL_Surface) -> None: ...

class Renderer:
    def __init__(
        self,
        target: Window,
        backend: int = -1,
        logical_size: tuple[int, int] | None = None,
        flags: int | None = ...,
    ) -> None: ...
    def __del__(self) -> None: ...
    @property
    def sdlrenderer(self) -> SDL_Renderer: ...
    def clear(self, color: Color | None = None) -> None: ...
    def present(self) -> None: ...
    def draw_rect(
        self, rects: tuple[int, int, int, int], color: Color | None = None
    ) -> None: ...
    def fill(
        self, rects: tuple[int, int, int, int], color: Color | None = None
    ) -> None: ...
